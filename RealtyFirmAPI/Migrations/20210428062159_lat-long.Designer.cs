// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealtyFirmAPI.Data;

namespace RealtyFirmAPI.Migrations
{
    [DbContext(typeof(RealtyDbContext))]
    [Migration("20210428062159_lat-long")]
    partial class latlong
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealtyFirmAPI.Models.Bidder", b =>
                {
                    b.Property<Guid>("Bidder_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Google_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Bidder_Id");

                    b.ToTable("Bidders");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Broker", b =>
                {
                    b.Property<Guid>("Broker_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Google_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Broker_Id");

                    b.ToTable("Brokers");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Image", b =>
                {
                    b.Property<Guid>("Image_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Listing_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Image_Id");

                    b.HasIndex("Listing_Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Listing", b =>
                {
                    b.Property<Guid>("Listing_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Broker_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor_Area")
                        .HasColumnType("int");

                    b.Property<string>("Form_Of_Lease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<int>("Listing_Price")
                        .HasColumnType("int");

                    b.Property<string>("Listing_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("Lot_Area")
                        .HasColumnType("int");

                    b.Property<int>("Nonusable_Floor_Area")
                        .HasColumnType("int");

                    b.Property<string>("Postal_Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postal_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Room_Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tour_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year_Built")
                        .HasColumnType("int");

                    b.HasKey("Listing_Id");

                    b.HasIndex("Broker_Id");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.ListingBidder", b =>
                {
                    b.Property<Guid>("Bidder_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Listing_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Bid")
                        .HasColumnType("int");

                    b.HasKey("Bidder_Id", "Listing_Id");

                    b.HasIndex("Listing_Id");

                    b.ToTable("ListingBidders");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Image", b =>
                {
                    b.HasOne("RealtyFirmAPI.Models.Listing", "Listing")
                        .WithMany("Images")
                        .HasForeignKey("Listing_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Listing", b =>
                {
                    b.HasOne("RealtyFirmAPI.Models.Broker", "Broker")
                        .WithMany("Listings")
                        .HasForeignKey("Broker_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Broker");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.ListingBidder", b =>
                {
                    b.HasOne("RealtyFirmAPI.Models.Bidder", "Bidder")
                        .WithMany("ListingBidders")
                        .HasForeignKey("Bidder_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealtyFirmAPI.Models.Listing", "Listing")
                        .WithMany("ListingBidders")
                        .HasForeignKey("Listing_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bidder");

                    b.Navigation("Listing");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Bidder", b =>
                {
                    b.Navigation("ListingBidders");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Broker", b =>
                {
                    b.Navigation("Listings");
                });

            modelBuilder.Entity("RealtyFirmAPI.Models.Listing", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("ListingBidders");
                });
#pragma warning restore 612, 618
        }
    }
}
